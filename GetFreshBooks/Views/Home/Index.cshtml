@{
    ViewBag.Title = "Home Page";
    ViewBag.Roles = new List<string>();
}

@if (ViewData["addedToCart"] != null)
{
<div class="mt-s alert alert-success alert-dismissible" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <strong>Added to Cart.</strong> Click @Html.ActionLink("here", "Index", "Cart") to view Cart.
</div>
}


@foreach (var cat in ViewBag.Categories)
{
    <h3 class="mt-l mb-s">@String.Format("Books in \"{0}\"", cat.Name)</h3>
    <div class="responsive">
        @foreach (var book in ViewBag.Books)
        {
            if (book.CategoryID == cat.CategoryID)
            {
                <div class="book--box pr-s">
                    <img class="book--img" src="~/images/@(book.ISBN).jpg" />
                    <h4 class="book--title">@book.Title</h4>
                    <div class="book--author">@book.Author</div>
                    <div class="book--price mb-xxs">S$@book.Price</div>
                    @if (User.Identity.IsAuthenticated)
                    {
                        using (Html.BeginForm("Index", "Home", FormMethod.Post))
                        {

                            <input type="hidden" name="isbn" value="@book.ISBN" />
                            <button type="submit" class="btn btn-sm btn-default">
                                <i class="fa fa-cart-plus"></i> Add To Cart
                            </button>
                        }
                        @*<button type="button" class="btn btn-default"><i class="fa fa-cart-plus"></i> Add to Cart</button>*@
                    }
                </div>
            }
        }
    </div>
}

@section scripts {
    <script src="~/Content/components/slick-carousel/slick/slick.min.js"></script>
    <script>
        $('.responsive').slick({
            dots: true,
            arrows: true,
            infinite: false,
            speed: 300,
            slidesToShow: 6,
            slidesToScroll: 4,
            responsive: [
                {
                    breakpoint: 1024,
                    settings: {
                        slidesToShow: 3,
                        slidesToScroll: 3,
                        infinite: true,
                        dots: true
                    }
                },
                {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 2,
                        arrows: false
                    }
                },
                //{
                //    breakpoint: 480,
                //    settings: {
                //        slidesToShow: 2,
                //        slidesToScroll: 2
                //    }
                //}
                // You can unslick at a given breakpoint now by adding:
                // settings: "unslick"
                // instead of a settings object
            ]
        });
    </script>
}
